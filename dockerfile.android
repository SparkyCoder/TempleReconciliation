# Use the official Node.js image as a parent image
FROM node:18

# Install additional dependencies for React Native, Android, and ADB
RUN apt-get update && apt-get install -y \
    wget \
    tar \
    unzip \
    build-essential \
    openjdk-17-jdk-headless \
    android-tools-adb \
    usbutils \
    dos2unix \
    && apt-get clean

# Set environment variables for Android SDK
ENV ANDROID_SDK_ROOT=/usr/local/android-sdk
ENV ANDROID_HOME=${ANDROID_SDK_ROOT}
ENV PATH=${PATH}:${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin:${ANDROID_SDK_ROOT}/platform-tools

# Install Android SDK command-line tools
RUN mkdir -p $ANDROID_SDK_ROOT/cmdline-tools \
    && wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip -O android-sdk.zip \
    && unzip android-sdk.zip -d $ANDROID_SDK_ROOT/cmdline-tools \
    && rm android-sdk.zip \
    && mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest \
    && chmod -R 755 $ANDROID_SDK_ROOT/cmdline-tools/latest

# Accept licenses and install SDK components
RUN yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses \
    && $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "platform-tools" \
    && $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "platforms;android-34" \
    && $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "build-tools;34.0.0" \
    && $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "emulator" \
    && $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "system-images;android-34;google_apis;x86_64"

# Set the working directory to /app
WORKDIR /app

# Copy package.json and package-lock.json to the working directory
COPY package.json package-lock.json ./

# Install dependencies using npm with --legacy-peer-deps flag
RUN npm install --legacy-peer-deps

# Copy the rest of the application code to the working directory
COPY . .

# Ensure gradlew is executable and has Unix line endings
RUN chmod +x ./android/gradlew
RUN dos2unix ./android/gradlew  

# Run gradlew to ensure it is set up correctly
RUN ./android/gradlew --version

# Copy the entrypoint script
COPY entrypoint.sh /usr/local/bin/
RUN dos2unix /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Expose the port Metro Bundler runs on
EXPOSE 8081

# Command to run the entrypoint script
CMD ["entrypoint.sh"]
